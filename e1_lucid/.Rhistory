## ================================================================================================================
##                                 Harvard Business School, Ethical Intelligence Lab
## ================================================================================================================
##                                DATA ANALYSIS | AV PERSPECTIVE STUDY | EXPERIMENT 6
## ================================================================================================================
## clear workspace
rm(list = ls())
options(download.file.method="libcurl")
## install packages
library(ggpubr)
library(dplyr)
library(ordinal)
if (!require(pacman)) {install.packages("pacman")}
pacman::p_load('ggplot2',         # plotting
'ggsignif',        # plotting significance bars
'lme4',            # functions for fitting linear regression models
'ggforce',         # make ggplot even fancier
'ggpubr',          # arrange plots in a grid, if needed
'ltm',             # probably not using..
'tidyr',           # tools for cleaning messy data
'stringr',         # perform string substitutions easily
'assertthat',      # allows me to check whether a variable is a string, with is.string
'emmeans',         # contrast analysis for regression models
'stats',           # use function to adjust for multiple comparisons
'filesstrings',    # create and move files
'simr',            # power analysis for mixed models
'compute.es',      # effect size package
'effsize',         # another effect size package
'pwr',             # package for power calculation
'nlme',            # get p values for mixed effect model
'DescTools',        # get Cramer's V
'rstatix',
'effects'
)
## ================================================================================================================
##                                                  PRE-PROCESSING
## ================================================================================================================
## read in data:
# set working directory to current directory
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
d <- read.csv('avp_e6_full.csv')
## ================================================================================================================
##                                 Harvard Business School, Ethical Intelligence Lab
## ================================================================================================================
##                                DATA ANALYSIS | AV PERSPECTIVE STUDY | EXPERIMENT 6
## ================================================================================================================
## clear workspace
rm(list = ls())
options(download.file.method="libcurl")
## install packages
library(ggpubr)
library(dplyr)
library(ordinal)
if (!require(pacman)) {install.packages("pacman")}
pacman::p_load('ggplot2',         # plotting
'ggsignif',        # plotting significance bars
'lme4',            # functions for fitting linear regression models
'ggforce',         # make ggplot even fancier
'ggpubr',          # arrange plots in a grid, if needed
'ltm',             # probably not using..
'tidyr',           # tools for cleaning messy data
'stringr',         # perform string substitutions easily
'assertthat',      # allows me to check whether a variable is a string, with is.string
'emmeans',         # contrast analysis for regression models
'stats',           # use function to adjust for multiple comparisons
'filesstrings',    # create and move files
'simr',            # power analysis for mixed models
'compute.es',      # effect size package
'effsize',         # another effect size package
'pwr',             # package for power calculation
'nlme',            # get p values for mixed effect model
'DescTools',        # get Cramer's V
'rstatix',
'effects'
)
## ================================================================================================================
##                                                  PRE-PROCESSING
## ================================================================================================================
## read in data:
# set working directory to current directory
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
d <- read.csv('avp_e6_full.csv')
source('process.r')
## explore data frame:
head(d)
str(d)
dim(d) # dimensions of data frame by row [1] and column [2]
colnames(d) # all column names
summary(d)
## rename variables:
names(d)[names(d) == 'FL_8_DO'] <- 'cond'
## change condition entries
d$cond[d$cond == "FL_53"] <- "pref_others"
d$cond[d$cond == "FL_51"] <- "pref_you"
## subjects randomized:
table(d$cond)
##age to numeric
d$age = as.numeric(d$age)
## ================================================================================================================
##                                                   EXCLUSIONS
## ================================================================================================================
## number of participants BEFORE exclusions:
dim(d)[1]
## attention exclusions:
# remove responses from data frame that failed attention checks
d <- subset(d, (d$att_2 == 6 & d$att_3 == 4 & d$att_4 == 1))
dim(d) # number of participants should decrease after attention exclusions
n_original <- dim(d)[1]
n_original
## comprehension exclusions:
# remove responses from data frame that failed comprehension checks
d <- subset(d, (d$comp_1 == 1 & d$comp_2 == 2 & d$comp_3 == 2))
dim(d) # number of participants should decrease after comprehension exclusions
## number of participants AFTER exclusions:
n_final <- dim(d)[1] # extracting number of rows only, not columns
n_final
percent_excluded <- (n_original - n_final)/n_original
percent_excluded
table(d$cond)
## ================================================================================================================
##                                 Harvard Business School, Ethical Intelligence Lab
## ================================================================================================================
##                                DATA ANALYSIS | AV PERSPECTIVE STUDY | EXPERIMENT 6
## ================================================================================================================
## clear workspace
rm(list = ls())
options(download.file.method="libcurl")
## install packages
library(ggpubr)
library(dplyr)
library(ordinal)
if (!require(pacman)) {install.packages("pacman")}
pacman::p_load('ggplot2',         # plotting
'ggsignif',        # plotting significance bars
'lme4',            # functions for fitting linear regression models
'ggforce',         # make ggplot even fancier
'ggpubr',          # arrange plots in a grid, if needed
'ltm',             # probably not using..
'tidyr',           # tools for cleaning messy data
'stringr',         # perform string substitutions easily
'assertthat',      # allows me to check whether a variable is a string, with is.string
'emmeans',         # contrast analysis for regression models
'stats',           # use function to adjust for multiple comparisons
'filesstrings',    # create and move files
'simr',            # power analysis for mixed models
'compute.es',      # effect size package
'effsize',         # another effect size package
'pwr',             # package for power calculation
'nlme',            # get p values for mixed effect model
'DescTools',        # get Cramer's V
'rstatix',
'effects'
)
## ================================================================================================================
##                                                  PRE-PROCESSING
## ================================================================================================================
## read in data:
# set working directory to current directory
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
d <- read.csv('avp_e6.csv')
source('process.r')
## ================================================================================================================
##                                 Harvard Business School, Ethical Intelligence Lab
## ================================================================================================================
##                                DATA ANALYSIS | AV PERSPECTIVE STUDY | EXPERIMENT 6
## ================================================================================================================
## clear workspace
rm(list = ls())
options(download.file.method="libcurl")
## install packages
library(ggpubr)
library(dplyr)
library(ordinal)
if (!require(pacman)) {install.packages("pacman")}
pacman::p_load('ggplot2',         # plotting
'ggsignif',        # plotting significance bars
'lme4',            # functions for fitting linear regression models
'ggforce',         # make ggplot even fancier
'ggpubr',          # arrange plots in a grid, if needed
'ltm',             # probably not using..
'tidyr',           # tools for cleaning messy data
'stringr',         # perform string substitutions easily
'assertthat',      # allows me to check whether a variable is a string, with is.string
'emmeans',         # contrast analysis for regression models
'stats',           # use function to adjust for multiple comparisons
'filesstrings',    # create and move files
'simr',            # power analysis for mixed models
'compute.es',      # effect size package
'effsize',         # another effect size package
'pwr',             # package for power calculation
'nlme',            # get p values for mixed effect model
'DescTools',        # get Cramer's V
'rstatix',
'effects'
)
## ================================================================================================================
##                                                  PRE-PROCESSING
## ================================================================================================================
## read in data:
# set working directory to current directory
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
d <- read.csv('avp_e6.csv')
source('process.r')
## explore data frame:
head(d)
## ================================================================================================================
##                                 Harvard Business School, Ethical Intelligence Lab
## ================================================================================================================
##                                DATA ANALYSIS | AV PERSPECTIVE STUDY | EXPERIMENT 6
## ================================================================================================================
## clear workspace
rm(list = ls())
options(download.file.method="libcurl")
## install packages
library(ggpubr)
library(dplyr)
library(ordinal)
if (!require(pacman)) {install.packages("pacman")}
pacman::p_load('ggplot2',         # plotting
'ggsignif',        # plotting significance bars
'lme4',            # functions for fitting linear regression models
'ggforce',         # make ggplot even fancier
'ggpubr',          # arrange plots in a grid, if needed
'ltm',             # probably not using..
'tidyr',           # tools for cleaning messy data
'stringr',         # perform string substitutions easily
'assertthat',      # allows me to check whether a variable is a string, with is.string
'emmeans',         # contrast analysis for regression models
'stats',           # use function to adjust for multiple comparisons
'filesstrings',    # create and move files
'simr',            # power analysis for mixed models
'compute.es',      # effect size package
'effsize',         # another effect size package
'pwr',             # package for power calculation
'nlme',            # get p values for mixed effect model
'DescTools',        # get Cramer's V
'rstatix',
'effects'
)
## ================================================================================================================
##                                                  PRE-PROCESSING
## ================================================================================================================
## read in data:
# set working directory to current directory
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
d <- read.csv('avp_e6.csv')
source('process.r')
## explore data frame:
head(d)
str(d)
dim(d) # dimensions of data frame by row [1] and column [2]
colnames(d) # all column names
summary(d)
## rename variables:
names(d)[names(d) == 'FL_8_DO'] <- 'cond'
## change condition entries
d$cond[d$cond == "FL_53"] <- "pref_others"
d$cond[d$cond == "FL_51"] <- "pref_you"
## subjects randomized:
table(d$cond)
##age to numeric
d$age = as.numeric(d$age)
dim(d)
## number of participants BEFORE exclusions:
dim(d)[1]
## attention exclusions:
# remove responses from data frame that failed attention checks
d <- subset(d, (d$att_2 == 6 & d$att_3 == 4 & d$att_4 == 1))
dim(d) # number of participants should decrease after attention exclusions
n_original <- dim(d)[1]
n_original
mean(d$age, trim = 0, na.rm = TRUE) # mean age for original dataset
table(d$gender)[2]/sum(table(d$gender)) # female percentage for original dataset
## comprehension exclusions:
# remove responses from data frame that failed comprehension checks
d <- subset(d, (d$comp_1 == 1 & d$comp_2 == 2 & d$comp_3 == 2))
dim(d) # number of participants should decrease after comprehension exclusions
(1020-580)/1020
## number of participants AFTER exclusions:
n_final <- dim(d)[1] # extracting number of rows only, not columns
n_final
percent_excluded <- (n_original - n_final)/n_original
percent_excluded
table(d$cond)
?relocate
dim(d)
head(d)
colnames(d)
d <- d %>% relocate(pref_others, .after = pref_you)
d <- d %>% relocate(pref_others_explain, .after = pref_you_explain)
d <- d %>% relocate(safety_others_1, .after = safety_you_1)
d <- d %>% relocate(trust_others_1, .after = trust_you_1)
colnames(d)
## new data frame to extract pre-processed data into:
d_subset <- array(dim=c(dim(d)[1], 4))
colnames(d_subset) <- c('cond','pref', 'safety', 'trust')
d_subset <- as.data.frame(d_subset, stringsAsFactors=FALSE)
for(i in 1:dim(d)[1]) {
curr <- d[i,23:24][!is.na(d[i,23:24])] # for a given row, get only the non-NA values
d_subset[i,2] <- as.numeric(curr[curr!= ""]) # and only the non-empty values
curr1 <- d[i,29:30][!is.na(d[i,29:30])] # for a given row, get only the non-NA values
d_subset[i,3] <- as.numeric(curr1[curr1!= ""])
curr2 <- d[i,31:32][!is.na(d[i,31:32])] # for a given row, get only the non-NA values
d_subset[i,4] <- as.numeric(curr2[curr2!= ""])
d_subset[i,1] <- d[i,45][!is.na(d[i,45])]
}
## merge data of interest back with raw data:
# new data frame to work with
d_merged <- cbind(d_subset, d[,33:44])
d_merged$ss <- 1:dim(d_merged)[1]
## ================================================================================================================
##                                 Harvard Business School, Ethical Intelligence Lab
## ================================================================================================================
##                                DATA ANALYSIS | AV PERSPECTIVE STUDY | EXPERIMENT 6
## ================================================================================================================
## clear workspace
rm(list = ls())
options(download.file.method="libcurl")
## install packages
library(ggpubr)
library(dplyr)
library(ordinal)
if (!require(pacman)) {install.packages("pacman")}
pacman::p_load('ggplot2',         # plotting
'ggsignif',        # plotting significance bars
'lme4',            # functions for fitting linear regression models
'ggforce',         # make ggplot even fancier
'ggpubr',          # arrange plots in a grid, if needed
'ltm',             # probably not using..
'tidyr',           # tools for cleaning messy data
'stringr',         # perform string substitutions easily
'assertthat',      # allows me to check whether a variable is a string, with is.string
'emmeans',         # contrast analysis for regression models
'stats',           # use function to adjust for multiple comparisons
'filesstrings',    # create and move files
'simr',            # power analysis for mixed models
'compute.es',      # effect size package
'effsize',         # another effect size package
'pwr',             # package for power calculation
'nlme',            # get p values for mixed effect model
'DescTools',        # get Cramer's V
'rstatix',
'effects'
)
## ================================================================================================================
##                                                  PRE-PROCESSING
## ================================================================================================================
## read in data:
# set working directory to current directory
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
d <- read.csv('avp_e6.csv')
source('process.r')
## explore data frame:
head(d)
str(d)
dim(d) # dimensions of data frame by row [1] and column [2]
colnames(d) # all column names
summary(d)
## rename variables:
names(d)[names(d) == 'FL_8_DO'] <- 'cond'
## change condition entries
d$cond[d$cond == "FL_53"] <- "pref_others"
d$cond[d$cond == "FL_51"] <- "pref_you"
## subjects randomized:
table(d$cond)
##age to numeric
d$age = as.numeric(d$age)
## ================================================================================================================
##                                                   EXCLUSIONS
## ================================================================================================================
## number of participants BEFORE exclusions:
dim(d)[1]
## attention exclusions:
# remove responses from data frame that failed attention checks
d <- subset(d, (d$att_2 == 6 & d$att_3 == 4 & d$att_4 == 1))
dim(d) # number of participants should decrease after attention exclusions
n_original <- dim(d)[1]
n_original
mean(d$age, trim = 0, na.rm = TRUE) # mean age for original dataset
table(d$gender)[2]/sum(table(d$gender)) # female percentage for original dataset
## comprehension exclusions:
# remove responses from data frame that failed comprehension checks
d <- subset(d, (d$comp_1 == 1 & d$comp_2 == 2 & d$comp_3 == 2))
dim(d) # number of participants should decrease after comprehension exclusions
##clean
d <- d[1:nrow(d) - 1, ]
## number of participants AFTER exclusions:
n_final <- dim(d)[1] # extracting number of rows only, not columns
n_final
percent_excluded <- (n_original - n_final)/n_original
percent_excluded
table(d$cond)
## ================================================================================================================
##                                                    SUBSETTING
## ================================================================================================================
#rearrange data
d <- d %>% relocate(pref_others, .after = pref_you)
d <- d %>% relocate(pref_others_explain, .after = pref_you_explain)
d <- d %>% relocate(safety_others_1, .after = safety_you_1)
d <- d %>% relocate(trust_others_1, .after = trust_you_1)
colnames(d)
## new data frame to extract pre-processed data into:
d_subset <- array(dim=c(dim(d)[1], 4))
colnames(d_subset) <- c('cond','pref', 'safety', 'trust')
d_subset <- as.data.frame(d_subset, stringsAsFactors=FALSE)
## extract data of interest from middle part of raw data:
for(i in 1:dim(d)[1]) {
curr <- d[i,23:24][!is.na(d[i,23:24])] # for a given row, get only the non-NA values
d_subset[i,2] <- as.numeric(curr[curr!= ""]) # and only the non-empty values
curr1 <- d[i,29:30][!is.na(d[i,29:30])] # for a given row, get only the non-NA values
d_subset[i,3] <- as.numeric(curr1[curr1!= ""])
curr2 <- d[i,31:32][!is.na(d[i,31:32])] # for a given row, get only the non-NA values
d_subset[i,4] <- as.numeric(curr2[curr2!= ""])
d_subset[i,1] <- d[i,45][!is.na(d[i,45])]
}
## merge data of interest back with raw data:
# new data frame to work with
d_merged <- cbind(d_subset, d[,33:44])
d_merged$ss <- 1:dim(d_merged)[1]
# make pref_you as grp 1 and pref_other as grp 2
str(d_merged)
d_merged$cond <- as.factor(d_merged$cond)
d_merged$cond <- factor(d_merged$cond, levels = c('pref_you','pref_others'))
levels(d_merged$cond)
## age
mean(d$age, trim = 0, na.rm = TRUE) ## mean age
hist(d$age, main = "Histogram for Age", xlab = "Age", ylab = "Frequency")
## gender
table(d$gender)[1]/sum(table(d$gender)) ## percentage of males
table(d$gender)[2]/sum(table(d$gender)) ## percentage of females
## age
mean(d$age, trim = 0, na.rm = TRUE) ## mean age
## av knowledge
mean(d$ai_knowledge_1, trim = 0, na.rm = TRUE) ## mean av knowledge
hist(d$ai_knowledge, main = "Histogram for AV Knowledge", xlab = "AV Knowledge", ylab = "Frequency")
## license
table(d$license)[1]/sum(table(d$license)) ## percentage with driver's license
table(d$license)[2]/sum(table(d$license)) ## percentage without driver's license
barplot(table(d$license), main = "Bar Chart for License", xlab = "License", names.arg = c("Yes","No"))
#### by condition
table(d$cond)
table_gen <- table(d_merged$gender, d_merged$cond)
gen2_self <- table_gen[2,2]/sum(table_gen[,2])*100 #percent female in you condition
gen2_others <- table_gen[2,1]/sum(table_gen[,1])*100 #percent female in other condition
aggregate(age ~ cond, data = d_merged, mean)
gen2_self
